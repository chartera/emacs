(package-initialize)

(add-to-list 'package-archives
                 '("melpa" . "https://melpa.org/packages/"))

(add-to-list 'package-pinned-packages '(alchemist . "melpa-stable") t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.                                                                                                                                                                                                 
 ;; If you edit it by hand, you could mess it up, so be careful.                                                                                                                                                                              
 ;; Your init file should contain only one such instance.                                                                                                                                                                                     
 ;; If there is more than one, they won't work right.                                                                                                                                                                                         
 '(package-selected-packages (quote (sudo-edit helm undo-tree neotree))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.                                                                                                                                                                                                     
 ;; If you edit it by hand, you could mess it up, so be careful.                                                                                                                                                                              
 ;; Your init file should contain only one such instance.                                                                                                                                                                                     
 ;; If there is more than one, they won't work right.                                                                                                                                                                                         
 )

; reload init file                                                                                                                                                                                                                            
(defun reload-dotemacs ()
  (interactive)
  (load-file "~/.emacs"))
(global-set-key (kbd "C-c l") 'reload-dotemacs)
; undo and redo                                                                                                                                                                                                                               
(global-undo-tree-mode 1)
(global-set-key (kbd "C-z") 'undo)
(defalias 'redo 'undo-tree-redo)
(global-set-key (kbd "C-S-z") 'redo)
; window sizing                                                                                                                                                                                                                               
(defun v-resize (key)
  (interactive "cHit to enlarge\shrink")
  (cond

   ((eq key (string-to-char ","))
    (enlarge-window 1)
    (call-interactively 'v-resize))

   ((eq key (string-to-char "."))
    (enlarge-window -1)
    (call-interactively 'v-resize))

   ((eq key (string-to-char "<"))
    (enlarge-window-horizontally -1)
    (call-interactively 'v-resize))

   ((eq key (string-to-char ">"))
    (enlarge-window-horizontally 1)
    (call-interactively 'v-resize))

   (t (push key unread-command-events))))

(global-set-key "\C-c," 'v-resize)
(global-set-key "\C-c." 'v-resize)
(global-set-key "\C-c ," 'v-resize)
(global-set-key "\C-c ." 'v-resize)
; window switch                                                                                                                                                                                                                               
(global-set-key (kbd "C-x <down>") 'windmove-down)
(global-set-key (kbd "C-x <up>") 'windmove-up)
(global-set-key (kbd "C-x <left>") 'windmove-left)
(global-set-key (kbd "C-x <right>") 'windmove-right)
(global-set-key (kbd "C-c n") 'next-buffer)
(global-set-key (kbd "C-c p") 'previous-buffer)
;; helm                                                                                                                                                                                                                                       
(require 'helm-config)
(helm-mode 1)
(global-set-key (kbd "C-x C-f") 'helm-find-files)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "C-x C-b") 'helm-mini)
; neotree                                                                                                                                                                                                                                     
(global-set-key (kbd "C-q")   'neotree-toggle)
